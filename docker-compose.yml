version: '3.8'

services:
  cloud-config:
    build: ./cloud-config
    image: tung-cloud-config:0.0.1-SNAPSHOT
    container_name: cloud-config
    networks:
      - auth_network
    environment:
      SERVER_PORT: 1000
      GIT_URL: https://github.com/tungdn94/arsmd-config-repo
      GIT_BRANCH: main
    ports:
      - '1000:1000'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://cloud-config:1000/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  adminer:
    image: adminer
    container_name: adminer-admin
    networks:
      - auth_network
    restart: always
    ports:
      - '1400:8080'
  zipkin-storage:
    container_name: zipkin-storage
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - auth_network
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: zipkin_db
      MYSQL_USER: zipkin_user
      MYSQL_PASSWORD: zipkin_pass
    volumes:
      - zipkin-volume:/var/lib/mysql
      - ./zipkin-db/mysql.sql:/docker-entrypoint-initdb.d/init.sql
  zipkin-server:
    image: openzipkin/zipkin:latest-arm64
    container_name: zipkin-server
    networks:
      - auth_network
    ports:
      - "1300:9411"
    environment:
      STORAGE_TYPE: mysql
      MYSQL_DB: zipkin_db
      MYSQL_HOST: zipkin-storage
      MYSQL_USER: zipkin_user
      MYSQL_PASS: zipkin_pass
      MYSQL_TCP_PORT: 3306
  eureka-naming:
    depends_on:
        cloud-config:
          condition: service_healthy
    build: ./naming-server
    image: tung-eureka-naming:0.0.1-SNAPSHOT
    container_name: eureka-naming
    networks:
      - auth_network
    environment:
      SERVER_PORT: 1100
      CLOUD_SERVER_URL: cloud-config
      CLOUD_SERVER_PORT: 1000
      ACTIVE_PROFILE: dev
      EUREKA_SERVER_URL: eureka-naming
      EUREKA_SERVER_PORT: 1100
    ports:
      - '1100:1100'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka-naming:1100/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
  api-gateway:
    depends_on:
      cloud-config:
        condition: service_healthy
      zipkin-server:
        condition: service_healthy
      eureka-naming:
        condition: service_healthy
    build: ./api-gateway
    image: tung-api-gateway:0.0.1-SNAPSHOT
    container_name: api-gateway
    networks:
      - auth_network
    environment:
      SERVER_PORT: 1200
      CLOUD_SERVER_URL: cloud-config
      CLOUD_SERVER_PORT: 1000
      ACTIVE_PROFILE: dev
      EUREKA_SERVER_URL: eureka-naming
      EUREKA_SERVER_PORT: 1100
      ZIPKIN_SERVER_URL: zipkin-server
      ZIPKIN_SERVER_PORT: 9411
    ports:
      - '1200:1200'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://api-gateway:1200/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
  jwt-service:
    depends_on:
      cloud-config:
        condition: service_healthy
      zipkin-server:
        condition: service_healthy
      eureka-naming:
        condition: service_healthy
      user-storage:
        condition: service_started
    build:
      context: .
      dockerfile: ./jwt-service/Dockerfile
    image: tung-jwt-service:0.0.1-SNAPSHOT
    container_name: jwt-service
    networks:
      - auth_network
    environment:
      CLOUD_SERVER_URL: cloud-config
      CLOUD_SERVER_PORT: 1000
      ACTIVE_PROFILE: dev
      SERVER_PORT: 8000
      EUREKA_SERVER_URL: eureka-naming
      EUREKA_SERVER_PORT: 1100
      ZIPKIN_SERVER_URL: zipkin-server
      ZIPKIN_SERVER_PORT: 9411
      DATABASE_PORT: 3306
      DATABASE_URL: user-storage
      DATABASE_NAME: user_db
      DATABASE_USERNAME: user
      DATABASE_PASSWORD: pass
    ports:
      - "8000:8000"
  user-storage:
    container_name: user-storage
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - auth_network
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_db
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    volumes:
      - user-volumes:/var/lib/mysql
      - ./user-db/mysql.sql:/docker-entrypoint-initdb.d/init.sql
  prometheus:
    image: prom/prometheus:v2.35.0
    networks:
      - auth_network
    container_name: prometheus
    depends_on:
      jwt-service:
        condition: service_started
    ports:
      - '9090:9090'
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    networks:
      - auth_network
    ports:
      - '3000:3000'
    depends_on:
      prometheus:
        condition: service_started
    restart: unless-stopped
    links:
      - prometheus:prometheus
    volumes:
      - grafana-volume:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

networks:
  auth_network:
    driver: bridge

volumes:
  zipkin-volume:
    driver: local
  grafana-volume:
    driver: local
  user-volumes:
    driver: local